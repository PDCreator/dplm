const express = require('express');
const cors = require('cors');
const db = require('./db');
const commentRoutes = require('./routes/comments');
const likeRoutes = require('./routes/likes');
const placeRoutes = require('./routes/places');
const favoritesRoutes = require('./routes/favorites');


require('dotenv').config();


const app = express();
// üìå –î–æ–±–∞–≤—å —ç—Ç–æ:
app.use(express.json()); // —á—Ç–æ–±—ã —á–∏—Ç–∞—Ç—å JSON –∏–∑ body
app.use(cors());
app.use('/uploads', express.static('uploads'));
app.use('/api/places', placeRoutes);

app.use('/api/comments', commentRoutes);
app.use('/api/likes', likeRoutes);

app.use('/api/favorites', favoritesRoutes);

const authRoutes = require('./routes/auth');
app.use('/api/auth', authRoutes);
app.use(cors());
app.use(express.json());

// –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞
app.get('/api/news', (req, res) => {
    db.query('SELECT * FROM news', (err, results) => {
      if (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', err);
        return res.status(500).json({ error: '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' });
      }
      res.json(results);
    });
  });

app.post('/api/news', (req, res) => {
    const { title, content } = req.body;
  
    if (!title || !content) {
      return res.status(400).json({ message: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ' });
    }
  
    const query = 'INSERT INTO news (title, content, created_at) VALUES (?, ?, NOW())';
    db.query(query, [title, content], (err, result) => {
      if (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏:', err);
        return res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏' });
      }
      res.json({ message: '–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞', id: result.insertId });
    });
  });

// –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
app.put('/api/news/:id', (req, res) => {
  const { title, content } = req.body;
  const { id } = req.params;

  if (!title || !content) {
    return res.status(400).json({ message: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ' });
  }

  const query = 'UPDATE news SET title = ?, content = ? WHERE id = ?';
  db.query(query, [title, content, id], (err, result) => {
    if (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏:', err);
      return res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏' });
    }
    res.json({ message: '–ù–æ–≤–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞' });
  });
});

// –£–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
app.delete('/api/news/:id', (req, res) => {
  const { id } = req.params;

  const query = 'DELETE FROM news WHERE id = ?';
  db.query(query, [id], (err, result) => {
    if (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏:', err);
      return res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏' });
    }
    res.json({ message: '–ù–æ–≤–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∞' });
  });
});

// –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å –ø–æ ID
app.get('/api/news/:id', (req, res) => {
  const { id } = req.params;

  const query = 'SELECT * FROM news WHERE id = ?';
  db.query(query, [id], (err, results) => {
    if (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏:', err);
      return res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏' });
    }

    if (results.length === 0) {
      return res.status(404).json({ message: '–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
    }

    res.json(results[0]);
  });
});


app.get('/', (req, res) => {
    res.send('Backend —Ä–∞–±–æ—Ç–∞–µ—Ç!');
  });
app.listen(process.env.PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${process.env.PORT}`);
});