const express = require('express');
const router = express.Router();
const db = require('../db');
const nodemailer = require('nodemailer');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—á—Ç—ã
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: 'flakerdead@gmail.com',
    pass: 'lwxt qcra ygmy nprf'
  }
});

// üì§ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞
function sendEmail(to, subject, html) {
  return transporter.sendMail({
    from: 'flakerdead@gmail.com',
    to,
    subject,
    html
  });
}

// üì• –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏
router.get('/', (req, res) => {
  db.query('SELECT * FROM news', (err, results) => {
    if (err) return res.status(500).json({ error: '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' });
    res.json(results);
  });
});

// ‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –∏ —Å–≤—è–∑–∞—Ç—å —Å –º–µ—Å—Ç–∞–º–∏
router.post('/', (req, res) => {
  const { title, content, placeIds } = req.body;

  if (!title || !content || !Array.isArray(placeIds)) {
    return res.status(400).json({ message: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫, —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏ –º–µ—Å—Ç–∞' });
  }

  const insertNewsQuery = 'INSERT INTO news (title, content, created_at) VALUES (?, ?, NOW())';
  db.query(insertNewsQuery, [title, content], (err, result) => {
    if (err) return res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏' });

    const newsId = result.insertId;

    // –ü—Ä–∏–≤—è–∑–∫–∞ –∫ –º–µ—Å—Ç–∞–º
    const values = placeIds.map(placeId => [newsId, placeId]);
    db.query('INSERT INTO news_places (news_id, place_id) VALUES ?', [values], (err2) => {
      if (err2) console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ –º–µ—Å—Ç:', err2);

      // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —ç—Ç–∏–º–∏ –º–µ—Å—Ç–∞–º–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–º email
      const usersQuery = `
        SELECT DISTINCT u.email FROM users u
        JOIN favorites f ON f.user_id = u.id
        WHERE f.place_id IN (?) AND u.email IS NOT NULL AND u.email_verified = 1
      `;

      db.query(usersQuery, [placeIds], (err3, users) => {
        if (err3) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', err3);
          return res.status(500).json({ message: '–ù–æ–≤–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞, –Ω–æ —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å' });
        }

        // –†–∞—Å—Å—ã–ª–∫–∞ email
        const emailPromises = users.map(user => sendEmail(
          user.email,
          '–ù–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –æ –≤–∞—à–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–º –º–µ—Å—Ç–µ',
          `<p>–ü–æ—è–≤–∏–ª–∞—Å—å –Ω–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å: <strong>${title}</strong></p><p>${content}</p>`
        ));

        Promise.allSettled(emailPromises)
          .then(() => {
            res.json({ message: '–ù–æ–≤–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∏ –ø–∏—Å—å–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã', id: newsId });
          })
          .catch(() => {
            res.status(500).json({ message: '–ù–æ–≤–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞, –Ω–æ –ø–∏—Å—å–º–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã' });
          });
      });
    });
  });
});

// ‚úèÔ∏è –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
router.put('/:id', (req, res) => {
  const { title, content } = req.body;
  const { id } = req.params;

  if (!title || !content) {
    return res.status(400).json({ message: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ' });
  }

  db.query('UPDATE news SET title = ?, content = ? WHERE id = ?', [title, content, id], (err) => {
    if (err) return res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏' });
    res.json({ message: '–ù–æ–≤–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞' });
  });
});

// ‚ùå –£–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
router.delete('/:id', (req, res) => {
  const { id } = req.params;

  db.query('DELETE FROM news WHERE id = ?', [id], (err) => {
    if (err) return res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏' });
    res.json({ message: '–ù–æ–≤–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∞' });
  });
});

// üîç –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –ø–æ ID
router.get('/:id', (req, res) => {
  const { id } = req.params;

  db.query('SELECT * FROM news WHERE id = ?', [id], (err, results) => {
    if (err) return res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏' });
    if (results.length === 0) return res.status(404).json({ message: '–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
    res.json(results[0]);
  });
});

module.exports = router;
